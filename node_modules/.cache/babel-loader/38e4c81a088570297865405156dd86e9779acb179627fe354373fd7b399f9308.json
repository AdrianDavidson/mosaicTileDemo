{"ast":null,"code":"'use strict';\n\nconst transform = require('./lib/transform.js');\n\n/**\n * @typedef {{precision?: number | false,\n *          preserve?: boolean,\n *          warnWhenCannotResolve?: boolean,\n *          mediaQueries?: boolean,\n *          selectors?: boolean}} PostCssCalcOptions\n */\n/**\n * @type {import('postcss').PluginCreator<PostCssCalcOptions>}\n * @param {PostCssCalcOptions} opts\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator(opts) {\n  const options = Object.assign({\n    precision: 5,\n    preserve: false,\n    warnWhenCannotResolve: false,\n    mediaQueries: false,\n    selectors: false\n  }, opts);\n  return {\n    postcssPlugin: 'postcss-calc',\n    OnceExit(css, _ref) {\n      let {\n        result\n      } = _ref;\n      css.walk(node => {\n        const {\n          type\n        } = node;\n        if (type === 'decl') {\n          transform(node, 'value', options, result);\n        }\n        if (type === 'atrule' && options.mediaQueries) {\n          transform(node, 'params', options, result);\n        }\n        if (type === 'rule' && options.selectors) {\n          transform(node, 'selector', options, result);\n        }\n      });\n    }\n  };\n}\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"names":["transform","require","pluginCreator","opts","options","Object","assign","precision","preserve","warnWhenCannotResolve","mediaQueries","selectors","postcssPlugin","OnceExit","css","result","walk","node","type","postcss","module","exports"],"sources":["C:/Users/Adrian/Desktop/kisi_project/mosaicTileDemo/node_modules/postcss-calc/src/index.js"],"sourcesContent":["'use strict';\nconst transform = require('./lib/transform.js');\n\n/**\n * @typedef {{precision?: number | false,\n *          preserve?: boolean,\n *          warnWhenCannotResolve?: boolean,\n *          mediaQueries?: boolean,\n *          selectors?: boolean}} PostCssCalcOptions\n */\n/**\n * @type {import('postcss').PluginCreator<PostCssCalcOptions>}\n * @param {PostCssCalcOptions} opts\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator(opts) {\n  const options = Object.assign(\n    {\n      precision: 5,\n      preserve: false,\n      warnWhenCannotResolve: false,\n      mediaQueries: false,\n      selectors: false,\n    },\n    opts\n  );\n\n  return {\n    postcssPlugin: 'postcss-calc',\n    OnceExit(css, { result }) {\n      css.walk((node) => {\n        const { type } = node;\n        if (type === 'decl') {\n          transform(node, 'value', options, result);\n        }\n\n        if (type === 'atrule' && options.mediaQueries) {\n          transform(node, 'params', options, result);\n        }\n\n        if (type === 'rule' && options.selectors) {\n          transform(node, 'selector', options, result);\n        }\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\n\nmodule.exports = pluginCreator;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACC,IAAI,EAAE;EAC3B,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAC3B;IACEC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,KAAK;IACfC,qBAAqB,EAAE,KAAK;IAC5BC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE;EACb,CAAC,EACDR,IAAI,CACL;EAED,OAAO;IACLS,aAAa,EAAE,cAAc;IAC7BC,QAAQ,CAACC,GAAG,QAAc;MAAA,IAAZ;QAAEC;MAAO,CAAC;MACtBD,GAAG,CAACE,IAAI,CAAEC,IAAI,IAAK;QACjB,MAAM;UAAEC;QAAK,CAAC,GAAGD,IAAI;QACrB,IAAIC,IAAI,KAAK,MAAM,EAAE;UACnBlB,SAAS,CAACiB,IAAI,EAAE,OAAO,EAAEb,OAAO,EAAEW,MAAM,CAAC;QAC3C;QAEA,IAAIG,IAAI,KAAK,QAAQ,IAAId,OAAO,CAACM,YAAY,EAAE;UAC7CV,SAAS,CAACiB,IAAI,EAAE,QAAQ,EAAEb,OAAO,EAAEW,MAAM,CAAC;QAC5C;QAEA,IAAIG,IAAI,KAAK,MAAM,IAAId,OAAO,CAACO,SAAS,EAAE;UACxCX,SAAS,CAACiB,IAAI,EAAE,UAAU,EAAEb,OAAO,EAAEW,MAAM,CAAC;QAC9C;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH;AAEAb,aAAa,CAACiB,OAAO,GAAG,IAAI;AAE5BC,MAAM,CAACC,OAAO,GAAGnB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}